# Generated by Django 4.2.7 on 2025-10-18 00:08

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CyclonePrediction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cyclone_name', models.CharField(blank=True, default='', max_length=200)),
                ('prediction_date', models.DateField()),
                ('category', models.IntegerField(default=1)),
                ('max_wind_speed_kmh', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('central_pressure_hpa', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('path_coordinates', models.JSONField(default=list)),
                ('affected_locations', models.JSONField(default=list)),
                ('risk_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('risk_category', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], default='Low', max_length=20)),
                ('estimated_landfall_date', models.DateTimeField(blank=True, null=True)),
                ('confidence_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('is_historical', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'cyclone_predictions',
                'ordering': ['-prediction_date'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FloodingPrediction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prediction_date', models.DateField()),
                ('flood_probability', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('affected_area_km2', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('water_level_meters', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('risk_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('risk_category', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], default='Low', max_length=20)),
                ('mudslide_probability', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('affected_population', models.IntegerField(default=0)),
                ('confidence_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('is_historical', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'flooding_predictions',
                'ordering': ['-prediction_date'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=200)),
                ('region', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationParameter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('infrastructure_strength', models.DecimalField(decimal_places=2, default=5.0, max_digits=3)),
                ('soil_moisture_retention', models.DecimalField(decimal_places=2, default=5.0, max_digits=3)),
                ('soil_type', models.CharField(blank=True, default='', max_length=100)),
                ('vegetation_density', models.DecimalField(decimal_places=2, default=5.0, max_digits=3)),
                ('population_size', models.IntegerField(default=0)),
                ('population_density', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'location_parameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MLModelMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_type', models.CharField(choices=[('rainfall', 'Rainfall'), ('flooding', 'Flooding'), ('cyclone', 'Cyclone')], max_length=50)),
                ('version', models.CharField(max_length=50)),
                ('architecture', models.TextField(blank=True, default='')),
                ('training_date', models.DateTimeField(auto_now_add=True)),
                ('accuracy_score', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('rmse', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('mae', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=False)),
                ('model_file_path', models.CharField(blank=True, default='', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ml_model_metadata',
                'ordering': ['-training_date'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RainfallPrediction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prediction_date', models.DateField()),
                ('prediction_time', models.TimeField(blank=True, null=True)),
                ('predicted_rainfall_mm', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('intensity', models.CharField(choices=[('Light', 'Light'), ('Moderate', 'Moderate'), ('Heavy', 'Heavy'), ('Extreme', 'Extreme')], default='Light', max_length=20)),
                ('humidity_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('wind_speed_kmh', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('wind_direction', models.CharField(blank=True, default='', max_length=50)),
                ('air_pressure_hpa', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('confidence_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('is_historical', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'rainfall_predictions',
                'ordering': ['-prediction_date', '-prediction_time'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_preferences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recorded_date', models.DateField()),
                ('recorded_time', models.TimeField(blank=True, null=True)),
                ('temperature_celsius', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('rainfall_mm', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('humidity_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('wind_speed_kmh', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('wind_direction', models.CharField(blank=True, default='', max_length=50)),
                ('air_pressure_hpa', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cloud_cover_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('visibility_km', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'weather_data',
                'ordering': ['-recorded_date', '-recorded_time'],
                'managed': False,
            },
        ),
    ]
